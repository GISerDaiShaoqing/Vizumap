% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/build_bkey.R
\name{build_bkey}
\alias{build_bkey}
\title{Build a bivariate colour key}
\usage{
build_bkey(data, palette = "BlueYellow", terciles = FALSE, flipAxis = FALSE)
}
\arguments{
\item{data}{A data frame.}

\item{palette}{Name of colour palette or character vector of hex colour codes
created with \code{\link{build_palette}} function. Colour palette names include
\code{BlueYellow}, \code{CyanMagenta}, \code{BlueRed} and
\code{GreenBlue}.}

\item{terciles}{A logical value. This provides the option to define numerical
bounds for the colour key grid using terciles instead of equal intervals.}

\item{flipAxis}{A logical value. Whether to place the axis on the opposite sides or not.}
}
\description{
This function links data and a colour palette. Numerical bounds are added
to the 3 x 3 colour grid.
}
\details{
A key for the bivariate map is not automatically generated with
\code{\link{build_bmap}} and must be made using \code{\link{build_bkey}}. It is important
that the arguments passed to \code{\link{build_bkey}} match those passed to
\code{\link{build_bmap}}. The map and key can be viewed together using
\code{\link{attach_key}}.
}
\examples{
data(us_data)
data(us_geo)
poverty <- read.uv(data = us_data, estimate = "pov_rate", error = "pov_moe")

#use a prepared palette and terciles
key <- build_bkey(data = poverty, terciles = TRUE)
view(key)

#use a created palette
p <- build_palette(name = "usr", colrange =
 list(colour = c("darkblue", "chartreuse4"), difC = c(3, 4)))
key <- build_bkey(data = poverty, palette = p)
view(key)
}
\seealso{
\code{\link{attach_key}}
}
